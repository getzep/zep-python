# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .models_fact_rating_instruction import ModelsFactRatingInstruction


class User(UniversalBaseModel):
    created_at: typing.Optional[str] = None
    deleted_at: typing.Optional[str] = None
    email: typing.Optional[str] = None
    fact_rating_instruction: typing.Optional[ModelsFactRatingInstruction] = None
    first_name: typing.Optional[str] = None
    id: typing.Optional[int] = None
    last_name: typing.Optional[str] = None
    metadata: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = pydantic.Field(default=None)
    """
    Deprecated
    """

    project_uuid: typing.Optional[str] = None
    session_count: typing.Optional[int] = pydantic.Field(default=None)
    """
    Deprecated
    """

    updated_at: typing.Optional[str] = pydantic.Field(default=None)
    """
    Deprecated
    """

    user_id: typing.Optional[str] = None
    uuid_: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="uuid")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
