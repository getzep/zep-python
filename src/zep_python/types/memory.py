# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from ..core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from .fact import Fact
from .message import Message
from .summary import Summary


class Memory(pydantic_v1.BaseModel):
    facts: typing.Optional[typing.List[str]] = pydantic_v1.Field(default=None)
    """
    Most recent list of facts derived from the session. (cloud only)
    Deprecated: Facts will be deprecated in future releases and relevant_facts should be used instead.
    """

    messages: typing.Optional[typing.List[Message]] = pydantic_v1.Field(default=None)
    """
    A list of message objects, where each message contains a role and content. Only last_n messages will be returned
    """

    metadata: typing.Optional[typing.Dict[str, typing.Any]] = pydantic_v1.Field(default=None)
    """
    A dictionary containing metadata associated with the memory.
    """

    relevant_facts: typing.Optional[typing.List[Fact]] = pydantic_v1.Field(default=None)
    """
    Most relevant facts to the recent messages in the session.
    """

    summary: typing.Optional[Summary] = pydantic_v1.Field(default=None)
    """
    The most recent summary before last nth message. (cloud only)
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
